package com.interview.sde.java.search;

//https://leetcode.com/problems/jump-game-v/
public class JumpPathV {
    public int maxJumps(int[] arr, int d) {
        Integer[] memo = new Integer[arr.length];

        int max = 0;
        for(int i = 0; i < arr.length; i++){
            max = Math.max(max, maxJumps(arr, memo, i, d)+1);
        }
        return max;
    }

    public int maxJumps(int[] arr, Integer[] memo, int idx, int d) {
        if(memo[idx] == null){

            int max = 0;
            for(int i = idx + 1; i < arr.length && (i - idx) <= d; i++){
                if(arr[i] >= arr[idx]){
                    break;
                }
                max = Math.max(max, maxJumps(arr, memo, i, d) + 1);
            }
            for(int i = idx - 1; i >= 0 && (idx - i) <= d; i--){
                if(arr[i] >= arr[idx]){
                    break;
                }
                max = Math.max(max, maxJumps(arr, memo, i, d) + 1);
            }
            memo[idx] = max;
        }
        return memo[idx];
    }

    public static void main(String[] args) {
        new JumpPathV().maxJumps(new int[]{},615);
        new JumpPathV().maxJumps(new int[]{6,4,14,6,8,13,9,7,10,6,12},2);
        new JumpPathV().maxJumps(new int[]{3,3,3,3,3},1);
    }
}
